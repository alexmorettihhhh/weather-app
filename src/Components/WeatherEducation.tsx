import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Article, WeatherPhenomenon, Quiz, InteractiveMaterial, KidsContent } from '../types/education';
import './WeatherEducation.css';

interface Tab {
    id: string;
    label: string;
    icon: string;
}

const tabs: Tab[] = [
    { id: 'articles', label: '–°—Ç–∞—Ç—å–∏', icon: 'üìö' },
    { id: 'phenomena', label: '–ü–æ–≥–æ–¥–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è', icon: 'üåà' },
    { id: 'interactive', label: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤', icon: 'üéÆ' },
    { id: 'quizzes', label: '–í–∏–∫—Ç–æ—Ä–∏–Ω—ã', icon: '‚ùì' },
    { id: 'kids', label: '–î–µ—Ç—Å–∫–∏–π —Ä–∞–∑–¥–µ–ª', icon: 'üé®' },
    { id: 'facts', label: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã', icon: 'üí°' },
    { id: 'climate', label: '–ö–ª–∏–º–∞—Ç', icon: 'üåç' },
];

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
const weatherPhenomena: WeatherPhenomenon[] = [
    {
        id: '1',
        name: '–ì—Ä–æ–∑–∞',
        description: '–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ —è–≤–ª–µ–Ω–∏–µ —Å –º–æ–ª–Ω–∏—è–º–∏ –∏ –≥—Ä–æ–º–æ–º',
        explanation: '–°–ª–æ–∂–Ω–æ–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ —è–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤ –∫—É—á–µ–≤–æ-–¥–æ–∂–¥–µ–≤—ã—Ö –æ–±–ª–∞–∫–∞—Ö –∏ –º–µ–∂–¥—É –æ–±–ª–∞–∫–∞–º–∏ –∏ –∑–µ–º–ª–µ–π –≤–æ–∑–Ω–∏–∫–∞—é—Ç —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑—Ä—è–¥—ã ‚Äî –º–æ–ª–Ω–∏–∏, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ–º—ã–µ –≥—Ä–æ–º–æ–º.',
        causes: [
            '–í–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ —Ç–µ–ø–ª–æ–≥–æ –∏ —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞',
            '–ú–æ–ª–Ω–∏—è –º–æ–∂–µ—Ç –Ω–∞–≥—Ä–µ—Ç—å –≤–æ–∑–¥—É—Ö –¥–æ 30,000¬∞C',
            '–ì—Ä–æ–º - —ç—Ç–æ –∑–≤—É–∫–æ–≤–∞—è –≤–æ–ª–Ω–∞ –æ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞',
            '–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä–æ–∑—ã - 30 –º–∏–Ω—É—Ç'
        ],
        effects: [
            '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑—Ä—è–¥—ã',
            '–°–∏–ª—å–Ω—ã–µ –æ—Å–∞–¥–∫–∏',
            '–®–∫–≤–∞–ª–∏—Å—Ç—ã–π –≤–µ—Ç–µ—Ä',
            '–í–æ–∑–º–æ–∂–Ω—ã–π –≥—Ä–∞–¥'
        ]
    },
    {
        id: '2',
        name: '–†–∞–¥—É–≥–∞',
        description: '–û–ø—Ç–∏—á–µ—Å–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ',
        explanation: '–û–ø—Ç–∏—á–µ—Å–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–µ–º –∏ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ–º —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ –≤–æ–¥—è–Ω—ã—Ö –∫–∞–ø–ª—è—Ö.',
        causes: [
            '–ü–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–∏ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ –∫–∞–ø–ª—è—Ö –≤–æ–¥—ã',
            '–í—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç —Å–µ–º—å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤',
            '–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏—Ç —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–∞–¥—É–≥—É',
            '–†–∞–¥—É–≥–∞ - —ç—Ç–æ –ø–æ–ª–Ω—ã–π –∫—Ä—É–≥, –Ω–æ –º—ã –≤–∏–¥–∏–º —Ç–æ–ª—å–∫–æ –µ–≥–æ —á–∞—Å—Ç—å'
        ],
        effects: [
            '–í–∏–∑—É–∞–ª—å–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –Ω–∞ —Å–ø–µ–∫—Ç—Ä',
            '–°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏—á–µ—Å–∫–æ–π –∏–ª–ª—é–∑–∏–∏',
            '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤–æ–π–Ω–æ–π —Ä–∞–¥—É–≥–∏'
        ]
    }
];

// –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–µ–π
const mockArticles: Article[] = [
    {
        id: '1',
        title: '–ö–∞–∫ —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –æ–±–ª–∞–∫–∞',
        content: '–û–±–ª–∞–∫–∞ –æ–±—Ä–∞–∑—É—é—Ç—Å—è, –∫–æ–≥–¥–∞ –≤–æ–¥—è–Ω–æ–π –ø–∞—Ä –≤ –≤–æ–∑–¥—É—Ö–µ –∫–æ–Ω–¥–µ–Ω—Å–∏—Ä—É–µ—Ç—Å—è –≤ –∫–∞–ø–ª–∏ –≤–æ–¥—ã –∏–ª–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –ª—å–¥–∞. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–∏ –≤–æ–∑–¥—É—Ö–∞ –¥–æ —Ç–æ—á–∫–∏ —Ä–æ—Å—ã. –°—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±–ª–∞–∫–æ–≤: –ø–µ—Ä–∏—Å—Ç—ã–µ, –∫—É—á–µ–≤—ã–µ, —Å–ª–æ–∏—Å—Ç—ã–µ –∏ –¥—Ä—É–≥–∏–µ. –ö–∞–∂–¥—ã–π —Ç–∏–ø —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤—ã—Å–æ—Ç–µ –∏ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö...',
        category: 'meteorology',
        difficulty: 'beginner',
        tags: ['–æ–±–ª–∞–∫–∞', '–∞—Ç–º–æ—Å—Ñ–µ—Ä–∞', '–∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏—è'],
        createdAt: new Date(),
        updatedAt: new Date(),
        imageUrl: '/images/clouds.jpg'
    },
    {
        id: '2',
        title: '–í–ª–∏—è–Ω–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –ø–æ–≥–æ–¥—É',
        content: '–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–µ—Ç –∫–ª—é—á–µ–≤—É—é —Ä–æ–ª—å –≤ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π. –û–±–ª–∞—Å—Ç–∏ –≤—ã—Å–æ–∫–æ–≥–æ –∏ –Ω–∏–∑–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –≤–æ–∑–¥—É—à–Ω—ã—Ö –º–∞—Å—Å. –ö–æ–≥–¥–∞ –¥–∞–≤–ª–µ–Ω–∏–µ –ø–∞–¥–∞–µ—Ç, —ç—Ç–æ —á–∞—Å—Ç–æ –ø—Ä–µ–¥–≤–µ—â–∞–µ—Ç —É—Ö—É–¥—à–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã. –í—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ —Å–≤—è–∑–∞–Ω–æ —Å —è—Å–Ω–æ–π –ø–æ–≥–æ–¥–æ–π. –†–µ–∑–∫–∏–µ –ø–µ—Ä–µ–ø–∞–¥—ã –¥–∞–≤–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –≥–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏ —É –º–µ—Ç–µ–æ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –ª—é–¥–µ–π...',
        category: 'meteorology',
        difficulty: 'intermediate',
        tags: ['–¥–∞–≤–ª–µ–Ω–∏–µ', '—Ü–∏–∫–ª–æ–Ω—ã', '–∞–Ω—Ç–∏—Ü–∏–∫–ª–æ–Ω—ã'],
        createdAt: new Date(),
        updatedAt: new Date(),
        imageUrl: '/images/pressure.jpg'
    },
    {
        id: '3',
        title: '–ö–∞–∫ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤–µ—Ç–µ—Ä',
        content: '–í–µ—Ç–µ—Ä –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏–∑-–∑–∞ —Ä–∞–∑–Ω–∏—Ü—ã –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —É—á–∞—Å—Ç–∫–∞–º–∏ –∑–µ–º–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏. –í–æ–∑–¥—É—Ö –≤—Å–µ–≥–¥–∞ –¥–≤–∏–∂–µ—Ç—Å—è –∏–∑ –æ–±–ª–∞—Å—Ç–∏ –≤—ã—Å–æ–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç—å –Ω–∏–∑–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è. –ù–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ –≤–ª–∏—è–µ—Ç –≤—Ä–∞—â–µ–Ω–∏–µ –ó–µ–º–ª–∏ (—Å–∏–ª–∞ –ö–æ—Ä–∏–æ–ª–∏—Å–∞), –∞ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å - —Ä–∞–∑–Ω–∏—Ü–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –∏ —Ä–µ–ª—å–µ—Ñ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏...',
        category: 'meteorology',
        difficulty: 'beginner',
        tags: ['–≤–µ—Ç–µ—Ä', '–¥–∞–≤–ª–µ–Ω–∏–µ', '—Ü–∏—Ä–∫—É–ª—è—Ü–∏—è'],
        createdAt: new Date(),
        updatedAt: new Date(),
        imageUrl: '/images/wind.jpg'
    },
    {
        id: '4',
        title: '–ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–æ–Ω—ã –ó–µ–º–ª–∏',
        content: '–ù–∞ –ó–µ–º–ª–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–æ–Ω, –∫–∞–∂–¥–∞—è —Å–æ —Å–≤–æ–∏–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏. –û—Ç —ç–∫–≤–∞—Ç–æ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –ø–æ—è—Å–∞ –¥–æ –ø–æ–ª—è—Ä–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤, –∫–ª–∏–º–∞—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Ñ–∞–∫—Ç–æ—Ä–æ–≤: —à–∏—Ä–æ—Ç–æ–π, –æ–∫–µ–∞–Ω–∏—á–µ—Å–∫–∏–º–∏ —Ç–µ—á–µ–Ω–∏—è–º–∏, —Ä–µ–ª—å–µ—Ñ–æ–º –∏ –¥—Ä—É–≥–∏–º–∏ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏...',
        category: 'climate',
        difficulty: 'intermediate',
        tags: ['–∫–ª–∏–º–∞—Ç', '–∑–æ–Ω—ã', '–≥–µ–æ–≥—Ä–∞—Ñ–∏—è'],
        createdAt: new Date(),
        updatedAt: new Date(),
        imageUrl: '/images/climate-zones.jpg'
    },
    {
        id: '5',
        title: '–ú–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–±–æ—Ä—ã',
        content: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∏–±–æ—Ä–æ–≤ –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã. –ë–∞—Ä–æ–º–µ—Ç—Ä –∏–∑–º–µ—Ä—è–µ—Ç –¥–∞–≤–ª–µ–Ω–∏–µ, –∞–Ω–µ–º–æ–º–µ—Ç—Ä - —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞, –≥–∏–≥—Ä–æ–º–µ—Ç—Ä - –≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞. –ú–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–ø—É—Ç–Ω–∏–∫–∏ –∏ —Ä–∞–¥–∞—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –º–∞—Å—à—Ç–∞–±–µ...',
        category: 'instruments',
        difficulty: 'intermediate',
        tags: ['–ø—Ä–∏–±–æ—Ä—ã', '–∏–∑–º–µ—Ä–µ–Ω–∏—è', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'],
        createdAt: new Date(),
        updatedAt: new Date(),
        imageUrl: '/images/instruments.jpg'
    }
];

interface QuizState {
    isActive: boolean;
    currentQuestion: number;
    selectedAnswer: number | null;
    showExplanation: boolean;
    score: number;
    timeLeft: number;
    isFinished: boolean;
}

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
const mockQuizzes: Quiz[] = [
    {
        id: '1',
        title: '–û—Å–Ω–æ–≤—ã –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏–∏',
        description: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ –±–∞–∑–æ–≤—ã—Ö –ø–æ–Ω—è—Ç–∏—è—Ö –≤ –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏–∏',
        difficulty: 'easy',
        category: 'meteorology',
        timeLimit: 600,
        questions: [
            {
                id: 'q1',
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ?',
                options: [
                    '–î–∞–≤–ª–µ–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞ –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –ó–µ–º–ª–∏ –∏ –≤—Å–µ –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –Ω–∞ –Ω–µ–π —Ç–µ–ª–∞',
                    '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ —É –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ó–µ–º–ª–∏',
                    '–°–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è –≤–æ–∑–¥—É—à–Ω—ã—Ö –º–∞—Å—Å',
                    '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞ –≤ –≤–æ–∑–¥—É—Ö–µ'
                ],
                correctAnswer: 0,
                explanation: '–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ - —ç—Ç–æ –¥–∞–≤–ª–µ–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞ –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –ó–µ–º–ª–∏ –∏ –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –Ω–∞ –Ω–µ–π —Ç–µ–ª–∞. –û–Ω–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤–µ—Å–æ–º –≤–æ–∑–¥—É—à–Ω–æ–≥–æ —Å—Ç–æ–ª–±–∞.'
            },
            {
                id: 'q2',
                question: '–ö–∞–∫–æ–π –ø—Ä–∏–±–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞?',
                options: [
                    '–¢–µ—Ä–º–æ–º–µ—Ç—Ä',
                    '–ë–∞—Ä–æ–º–µ—Ç—Ä',
                    '–ì–∏–≥—Ä–æ–º–µ—Ç—Ä',
                    '–ê–Ω–µ–º–æ–º–µ—Ç—Ä'
                ],
                correctAnswer: 2,
                explanation: '–ì–∏–≥—Ä–æ–º–µ—Ç—Ä - —ç—Ç–æ –ø—Ä–∏–±–æ—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞. –û–Ω –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞ –≤ –≤–æ–∑–¥—É—Ö–µ.'
            },
            {
                id: 'q3',
                question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–≤–∏–∂–µ–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞ –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏?',
                options: [
                    '–ö–æ–Ω–≤–µ–∫—Ü–∏—è',
                    '–í–µ—Ç–µ—Ä',
                    '–¢—É—Ä–±—É–ª–µ–Ω—Ç–Ω–æ—Å—Ç—å',
                    '–î–∏—Ñ—Ñ—É–∑–∏—è'
                ],
                correctAnswer: 1,
                explanation: '–í–µ—Ç–µ—Ä - —ç—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞ –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏, –≤—ã–∑–≤–∞–Ω–Ω–æ–µ —Ä–∞–∑–Ω–∏—Ü–µ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è.'
            },
            {
                id: 'q4',
                question: '–ö–∞–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ –≤—ã–∑—ã–≤–∞–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–æ—Å—ã?',
                options: [
                    '–ò—Å–ø–∞—Ä–µ–Ω–∏–µ –≤–æ–¥—ã',
                    '–ö–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏—è –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞',
                    '–°—É–±–ª–∏–º–∞—Ü–∏—è –ª—å–¥–∞',
                    '–¢–∞—è–Ω–∏–µ —Å–Ω–µ–≥–∞'
                ],
                correctAnswer: 1,
                explanation: '–†–æ—Å–∞ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏ –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞ –∏–∑ –≤–æ–∑–¥—É—Ö–∞ –Ω–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏.'
            },
            {
                id: 'q5',
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ –∏–∑–æ–±–∞—Ä—ã –Ω–∞ –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç–µ?',
                options: [
                    '–õ–∏–Ω–∏–∏ —Ä–∞–≤–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã',
                    '–õ–∏–Ω–∏–∏ —Ä–∞–≤–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è',
                    '–õ–∏–Ω–∏–∏ —Ä–∞–≤–Ω–æ–π –≤–ª–∞–∂–Ω–æ—Å—Ç–∏',
                    '–õ–∏–Ω–∏–∏ —Ä–∞–≤–Ω–æ–π –≤—ã—Å–æ—Ç—ã'
                ],
                correctAnswer: 1,
                explanation: '–ò–∑–æ–±–∞—Ä—ã - —ç—Ç–æ –ª–∏–Ω–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–µ, —Å–æ–µ–¥–∏–Ω—è—é—â–∏–µ —Ç–æ—á–∫–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–º –¥–∞–≤–ª–µ–Ω–∏–µ–º.'
            }
        ]
    },
    {
        id: '2',
        title: '–ü–æ–≥–æ–¥–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è',
        description: '–¢–µ—Å—Ç –Ω–∞ –∑–Ω–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π',
        difficulty: 'medium',
        category: 'phenomena',
        timeLimit: 480,
        questions: [
            {
                id: 'q1',
                question: '–ö–∞–∫–æ–µ —É—Å–ª–æ–≤–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–¥—É–≥–∏?',
                options: [
                    '–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä',
                    '–í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å',
                    '–°–æ–ª–Ω–µ—á–Ω—ã–π —Å–≤–µ—Ç –∏ –∫–∞–ø–ª–∏ –≤–æ–¥—ã –≤ –≤–æ–∑–¥—É—Ö–µ',
                    '–ù–∏–∑–∫–æ–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ'
                ],
                correctAnswer: 2,
                explanation: '–†–∞–¥—É–≥–∞ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–∏ –∏ –æ—Ç—Ä–∞–∂–µ–Ω–∏–∏ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ –∫–∞–ø–ª—è—Ö –≤–æ–¥—ã, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –≤–æ–∑–¥—É—Ö–µ.'
            },
            {
                id: 'q2',
                question: '–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏—á–∏–Ω–æ–π –≥—Ä–æ–º–∞?',
                options: [
                    '–°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ –æ–±–ª–∞–∫–æ–≤',
                    '–ë—ã—Å—Ç—Ä–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞ –æ—Ç –º–æ–ª–Ω–∏–∏',
                    '–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä',
                    '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–≤–ª–µ–Ω–∏—è'
                ],
                correctAnswer: 1,
                explanation: '–ì—Ä–æ–º –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏–∑-–∑–∞ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞, –Ω–∞–≥—Ä–µ—Ç–æ–≥–æ –º–æ–ª–Ω–∏–µ–π –¥–æ –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã.'
            },
            {
                id: 'q3',
                question: '–ö–∞–∫ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≥—Ä–∞–¥?',
                options: [
                    '–ó–∞–º–µ—Ä–∑–∞–Ω–∏–µ –¥–æ–∂–¥–µ–≤—ã—Ö –∫–∞–ø–µ–ª—å –≤ –≤–æ–∑–¥—É—Ö–µ',
                    '–ö—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏—è –≤–æ–¥—è–Ω–æ–≥–æ –ø–∞—Ä–∞',
                    '–ú–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–µ –ø–æ–¥–Ω—è—Ç–∏–µ –∏ –æ–ø—É—Å–∫–∞–Ω–∏–µ –∫–∞–ø–µ–ª—å –≤ –≥—Ä–æ–∑–æ–≤–æ–º –æ–±–ª–∞–∫–µ',
                    '–ö–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏—è –ø—Ä–∏ –Ω–∏–∑–∫–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞—Ö'
                ],
                correctAnswer: 2,
                explanation: '–ì—Ä–∞–¥ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –∫–∞–ø–ª–∏ –≤–æ–¥—ã –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è –∏ –æ–ø—É—Å–∫–∞—é—Ç—Å—è –≤ –≥—Ä–æ–∑–æ–≤–æ–º –æ–±–ª–∞–∫–µ, –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –Ω–∞—Ä–∞—â–∏–≤–∞—è —Å–ª–æ–∏ –ª—å–¥–∞.'
            },
            {
                id: 'q4',
                question: '–ö–∞–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ –Ω–∞–∑—ã–≤–∞—é—Ç "—Å–µ–≤–µ—Ä–Ω—ã–º —Å–∏—è–Ω–∏–µ–º"?',
                options: [
                    '–û—Ç—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –æ—Ç —Å–Ω–µ–≥–∞',
                    '–°–≤–µ—á–µ–Ω–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –ø–æ–¥ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ–º —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞',
                    '–û—Å–æ–±—ã–π –≤–∏–¥ –º–æ–ª–Ω–∏–∏',
                    '–û—Ç—Ä–∞–∂–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –æ—Ç –æ–±–ª–∞–∫–æ–≤'
                ],
                correctAnswer: 1,
                explanation: '–°–µ–≤–µ—Ä–Ω–æ–µ —Å–∏—è–Ω–∏–µ - —ç—Ç–æ —Å–≤–µ—á–µ–Ω–∏–µ –≤–µ—Ä—Ö–Ω–∏—Ö —Å–ª–æ–µ–≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –ø–æ–¥ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ–º –∑–∞—Ä—è–∂–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞.'
            },
            {
                id: 'q5',
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–º–µ—Ä—á?',
                options: [
                    '–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä',
                    '–í—Ä–∞—â–∞—é—â–∏–π—Å—è —Å—Ç–æ–ª–± –≤–æ–∑–¥—É—Ö–∞',
                    '–ì—Ä–æ–∑–æ–≤–æ–µ –æ–±–ª–∞–∫–æ',
                    '–†–µ–∑–∫–æ–µ –ø–æ—Ö–æ–ª–æ–¥–∞–Ω–∏–µ'
                ],
                correctAnswer: 1,
                explanation: '–°–º–µ—Ä—á (—Ç–æ—Ä–Ω–∞–¥–æ) - —ç—Ç–æ –≤—Ä–∞—â–∞—é—â–∏–π—Å—è —Å—Ç–æ–ª–± –≤–æ–∑–¥—É—Ö–∞, —Å–æ–µ–¥–∏–Ω—è—é—â–∏–π –æ–±–ª–∞–∫–æ —Å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å—é –∑–µ–º–ª–∏ –∏–ª–∏ –≤–æ–¥—ã.'
            }
        ]
    },
    {
        id: '3',
        title: '–ö–ª–∏–º–∞—Ç –∏ –ø–æ–≥–æ–¥–∞',
        description: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö',
        difficulty: 'medium',
        category: 'climate',
        timeLimit: 540,
        questions: [
            {
                id: 'q1',
                question: '–ß—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–ª–∏–º–∞—Ç —Ä–µ–≥–∏–æ–Ω–∞?',
                options: [
                    '–¢–æ–ª—å–∫–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞',
                    '–ö–æ–º–ø–ª–µ–∫—Å –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏–π –∑–∞ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
                    '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤',
                    '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞'
                ],
                correctAnswer: 1,
                explanation: '–ö–ª–∏–º–∞—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–æ–º–ø–ª–µ–∫—Å–æ–º –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏–π, –Ω–∞–±–ª—é–¥–∞–µ–º—ã—Ö –≤ –¥–∞–Ω–Ω–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞ –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–π –ø–µ—Ä–∏–æ–¥.'
            },
            {
                id: 'q2',
                question: '–ö–∞–∫–æ–π —Ñ–∞–∫—Ç–æ—Ä –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–ª–∏–º–∞—Ç?',
                options: [
                    '–®–∏—Ä–æ—Ç–∞ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏',
                    '–ë–ª–∏–∑–æ—Å—Ç—å –∫ –æ–∫–µ–∞–Ω—É',
                    '–¶–≤–µ—Ç –ø–æ—á–≤—ã',
                    '–í—ã—Å–æ—Ç–∞ –Ω–∞–¥ —É—Ä–æ–≤–Ω–µ–º –º–æ—Ä—è'
                ],
                correctAnswer: 2,
                explanation: '–¶–≤–µ—Ç –ø–æ—á–≤—ã –º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–∏–º—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∏–º–∞—Ç–∞.'
            },
            {
                id: 'q3',
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∫–ª–∏–º–∞—Ç?',
                options: [
                    '–ö–ª–∏–º–∞—Ç —Å –±–æ–ª—å—à–∏–º–∏ —Å—É—Ç–æ—á–Ω—ã–º–∏ –∫–æ–ª–µ–±–∞–Ω–∏—è–º–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã',
                    '–ö–ª–∏–º–∞—Ç —Å —á–∞—Å—Ç—ã–º–∏ –¥–æ–∂–¥—è–º–∏',
                    '–ö–ª–∏–º–∞—Ç —Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π',
                    '–ö–ª–∏–º–∞—Ç —Å —Å–∏–ª—å–Ω—ã–º–∏ –≤–µ—Ç—Ä–∞–º–∏'
                ],
                correctAnswer: 0,
                explanation: '–ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∫–ª–∏–º–∞—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –±–æ–ª—å—à–∏–º–∏ –∫–æ–ª–µ–±–∞–Ω–∏—è–º–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ —É–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç—å—é –æ—Ç –æ–∫–µ–∞–Ω–∞.'
            }
        ]
    },
    {
        id: '4',
        title: '–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è',
        description: '–£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ø–æ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–º —è–≤–ª–µ–Ω–∏—è–º',
        difficulty: 'hard',
        category: 'phenomena',
        timeLimit: 720,
        questions: [
            {
                id: 'q1',
                question: '–ö–∞–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ–ø—Ç–∏—á–µ—Å–∫–∏–º –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–º —è–≤–ª–µ–Ω–∏—è–º?',
                options: [
                    '–ú–∏—Ä–∞–∂',
                    '–ì–∞–ª–æ',
                    '–ì—Ä–æ–º',
                    '–†–∞–¥—É–≥–∞'
                ],
                correctAnswer: 2,
                explanation: '–ì—Ä–æ–º - —ç—Ç–æ –∞–∫—É—Å—Ç–∏—á–µ—Å–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–µ–µ –º–æ–ª–Ω–∏—é, –∞ –Ω–µ –æ–ø—Ç–∏—á–µ—Å–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ.'
            },
            {
                id: 'q2',
                question: '–ü—Ä–∏ –∫–∞–∫–æ–º –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–º —è–≤–ª–µ–Ω–∏–∏ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤–æ—Ä–æ–Ω–∫–∞?',
                options: [
                    '–£—Ä–∞–≥–∞–Ω',
                    '–°–º–µ—Ä—á',
                    '–ì—Ä–æ–∑–∞',
                    '–ú–µ—Ç–µ–ª—å'
                ],
                correctAnswer: 1,
                explanation: '–°–º–µ—Ä—á (—Ç–æ—Ä–Ω–∞–¥–æ) —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –≤—Ä–∞—â–∞—é—â–µ–π—Å—è –≤–æ—Ä–æ–Ω–∫–∏, —Å–æ–µ–¥–∏–Ω—è—é—â–µ–π –æ–±–ª–∞–∫–æ —Å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å—é.'
            },
            {
                id: 'q3',
                question: '–ß—Ç–æ —Ç–∞–∫–æ–µ "–æ–≥–Ω–∏ —Å–≤—è—Ç–æ–≥–æ –≠–ª—å–º–∞"?',
                options: [
                    '–°–≤–µ—á–µ–Ω–∏–µ –≥–∞–∑–æ–≤ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ',
                    '–û—Ç—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –æ—Ç –æ–±–ª–∞–∫–æ–≤',
                    '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑—Ä—è–¥—ã –Ω–∞ –∑–∞–æ—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö',
                    '–í–∏–¥ –º–æ–ª–Ω–∏–∏'
                ],
                correctAnswer: 2,
                explanation: '–û–≥–Ω–∏ —Å–≤—è—Ç–æ–≥–æ –≠–ª—å–º–∞ - —ç—Ç–æ —Å–≤–µ—Ç—è—â–∏–µ—Å—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑—Ä—è–¥—ã –Ω–∞ –∑–∞–æ—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö –ø—Ä–∏ –±–æ–ª—å—à–æ–π –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ—Å—Ç–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—è –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ.'
            }
        ]
    }
];

const mockInteractiveMaterials: InteractiveMaterial[] = [
    {
        id: '1',
        title: '–°–∏–º—É–ª—è—Ç–æ—Ä —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞–∫–æ–≤',
        type: 'simulation',
        content: '–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±–ª–∞–∫–æ–≤ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –º–æ–¥–µ–ª–∏. –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ –≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤–ª–∏—è—é—Ç –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–ª–∞–∫–æ–≤ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–æ–≤ - –æ—Ç –ø–µ—Ä–∏—Å—Ç—ã—Ö –¥–æ –∫—É—á–µ–≤—ã—Ö.',
        instructions: [
            '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤–æ–∑–¥—É—Ö–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç -10¬∞C –¥–æ +30¬∞C',
            '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞ –æ—Ç 0% –¥–æ 100%',
            '–ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º –æ–±–ª–∞–∫–æ–≤',
            '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±–ª–∞–∫–æ–≤'
        ],
        ageGroup: 'teenager',
        requirements: ['–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π WebGL', '–°—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ']
    },
    {
        id: '2',
        title: '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ—Ä–Ω–∞–¥–æ –≤ –±—É—Ç—ã–ª–∫–µ',
        type: 'experiment',
        content: '–°–æ–∑–¥–∞–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –º–æ–¥–µ–ª—å —Ç–æ—Ä–Ω–∞–¥–æ –≤ –¥–æ–º–∞—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö. –≠—Ç–æ—Ç —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏—Ö—Ä–µ–≤—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ –∏ –º–µ—Ö–∞–Ω–∏–∑–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–æ—Ä–Ω–∞–¥–æ.',
        instructions: [
            '–ù–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–ª–∞—Å—Ç–∏–∫–æ–≤—É—é –±—É—Ç—ã–ª–∫—É –≤–æ–¥–æ–π, –æ—Å—Ç–∞–≤–∏–≤ –Ω–µ–º–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞',
            '–î–æ–±–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞–ø–µ–ª—å –ø–∏—â–µ–≤–æ–≥–æ –∫—Ä–∞—Å–∏—Ç–µ–ª—è –∏–ª–∏ –±–ª–µ—Å—Ç–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏',
            '–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏—Ç–µ –±—É—Ç—ã–ª–∫—É –≤–≤–µ—Ä—Ö –¥–Ω–æ–º –∏ —Å–æ–∑–¥–∞–π—Ç–µ –≤—Ä–∞—â–∞—Ç–µ–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ',
            '–ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤–æ—Ä–æ–Ω–∫–∏ –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è'
        ],
        ageGroup: 'children',
        requirements: [
            '–ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –ø–ª–∞—Å—Ç–∏–∫–æ–≤–∞—è –±—É—Ç—ã–ª–∫–∞ —Å –∫—Ä—ã—à–∫–æ–π',
            '–ß–∏—Å—Ç–∞—è –≤–æ–¥–∞ –∫–æ–º–Ω–∞—Ç–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã',
            '–ü–∏—â–µ–≤–æ–π –∫—Ä–∞—Å–∏—Ç–µ–ª—å –∏–ª–∏ –±–ª–µ—Å—Ç–∫–∏',
            '–ü–æ–º–æ—â—å –≤–∑—Ä–æ—Å–ª—ã—Ö –ø—Ä–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞'
        ]
    }
];

const mockKidsContent: KidsContent[] = [
    {
        id: '1',
        title: '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –ö–∞–ø–µ–ª—å–∫–∏',
        description: '–£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –∫–∞–ø–µ–ª—å–∫–∏ –≤–æ–¥—ã',
        content: '–ñ–∏–ª–∞-–±—ã–ª–∞ –º–∞–ª–µ–Ω—å–∫–∞—è –∫–∞–ø–µ–ª—å–∫–∞ –≤–æ–¥—ã, –∫–æ—Ç–æ—Ä–∞—è –º–µ—á—Ç–∞–ª–∞ —É–≤–∏–¥–µ—Ç—å –º–∏—Ä. –û–¥–Ω–∞–∂–¥—ã —Å–æ–ª–Ω—ã—à–∫–æ –ø—Ä–∏–≥—Ä–µ–ª–æ –µ—ë, –∏ –æ–Ω–∞ –ø–æ–¥–Ω—è–ª–∞—Å—å –≤—ã—Å–æ–∫–æ –≤ –Ω–µ–±–æ, –≥–¥–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∞—Å—å —Å –æ–±–ª–∞–∫–∞–º–∏...',
        ageRange: [5, 8],
        type: 'story',
        difficulty: 'easy',
        imageUrl: '/images/clouds.jpg',
        parentGuidance: '–û–±—Å—É–¥–∏—Ç–µ —Å —Ä–µ–±–µ–Ω–∫–æ–º –∫—Ä—É–≥–æ–≤–æ—Ä–æ—Ç –≤–æ–¥—ã –≤ –ø—Ä–∏—Ä–æ–¥–µ'
    },
    {
        id: '2',
        title: '–°–¥–µ–ª–∞–π —Å–≤–æ—é —Ä–∞–¥—É–≥—É',
        description: '–í–µ—Å–µ–ª—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ä–∞–¥—É–≥–∏ –¥–æ–º–∞',
        content: '–° –ø–æ–º–æ—â—å—é –ø—Ä–æ—Å—Ç—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –Ω–∞—Å—Ç–æ—è—â—É—é —Ä–∞–¥—É–≥—É! –≠—Ç–æ—Ç —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è —Ä–∞–¥—É–≥–∞ –≤ –ø—Ä–∏—Ä–æ–¥–µ.',
        ageRange: [6, 10],
        type: 'experiment',
        difficulty: 'medium',
        materials: ['–ú–∏—Å–∫–∞ —Å –≤–æ–¥–æ–π', '–ó–µ—Ä–∫–∞–ª–æ', '–ë–µ–ª—ã–π –ª–∏—Å—Ç –±—É–º–∞–≥–∏', '–°–æ–ª–Ω–µ—á–Ω—ã–π —Å–≤–µ—Ç'],
        imageUrl: '/images/climate-zones.jpg'
    }
];

const mockFacts = [
    {
        id: '1',
        title: '–ú–æ–ª–Ω–∏—è',
        fact: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–æ–ª–Ω–∏–∏ –º–æ–∂–µ—Ç –¥–æ—Å—Ç–∏–≥–∞—Ç—å 30,000¬∞C, —á—Ç–æ –≤ 5 —Ä–∞–∑ –≥–æ—Ä—è—á–µ–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –°–æ–ª–Ω—Ü–∞!',
        icon: '‚ö°'
    },
    {
        id: '2',
        title: '–°–Ω–µ–∂–∏–Ω–∫–∏',
        fact: '–ö–∞–∂–¥–∞—è —Å–Ω–µ–∂–∏–Ω–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞! –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω–∞–π—Ç–∏ –¥–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Å–Ω–µ–∂–∏–Ω–∫–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é.',
        icon: '‚ùÑÔ∏è'
    },
    {
        id: '3',
        title: '–£—Ä–∞–≥–∞–Ω—ã',
        fact: '–û–¥–∏–Ω —É—Ä–∞–≥–∞–Ω –º–æ–∂–µ—Ç –≤—ã–¥–µ–ª–∏—Ç—å —Å—Ç–æ–ª—å–∫–æ —ç–Ω–µ—Ä–≥–∏–∏, —Å–∫–æ–ª—å–∫–æ –≤—ã–¥–µ–ª—è—é—Ç 10,000 –∞—Ç–æ–º–Ω—ã—Ö –±–æ–º–±!',
        icon: 'üå™Ô∏è'
    }
];

const mockClimateZones = [
    {
        id: '1',
        name: '–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –∫–ª–∏–º–∞—Ç',
        description: '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –≤—ã—Å–æ–∫–∏–º–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞–º–∏ –∏ –æ–±–∏–ª—å–Ω—ã–º–∏ –æ—Å–∞–¥–∫–∞–º–∏ –∫—Ä—É–≥–ª—ã–π –≥–æ–¥',
        characteristics: [
            '–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ã—à–µ 18¬∞C',
            '–ì–æ–¥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤ –±–æ–ª–µ–µ 1500 –º–º',
            '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã—Ö —Å–µ–∑–æ–Ω–æ–≤'
        ],
        flora: ['–ü–∞–ª—å–º—ã', '–û—Ä—Ö–∏–¥–µ–∏', '–õ–∏–∞–Ω—ã'],
        fauna: ['–¢—É–∫–∞–Ω—ã', '–Ø–≥—É–∞—Ä—ã', '–ö–æ–ª–∏–±—Ä–∏'],
        icon: 'üå¥'
    },
    {
        id: '2',
        name: '–£–º–µ—Ä–µ–Ω–Ω—ã–π –∫–ª–∏–º–∞—Ç',
        description: '–ß–µ—Ç–∫–æ –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–µ —Å–µ–∑–æ–Ω—ã —Å —É–º–µ—Ä–µ–Ω–Ω—ã–º–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞–º–∏',
        characteristics: [
            '–ß–µ—Ç—ã—Ä–µ —Å–µ–∑–æ–Ω–∞',
            '–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç -3¬∞C –¥–æ +22¬∞C',
            '–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–∞–¥–∫–æ–≤'
        ],
        flora: ['–î—É–±—ã', '–ö–ª—ë–Ω—ã', '–ë–µ—Ä—ë–∑—ã'],
        fauna: ['–õ–æ—Å–∏', '–ú–µ–¥–≤–µ–¥–∏', '–í–æ–ª–∫–∏'],
        icon: 'üçÅ'
    }
];

const WeatherEducation: React.FC = () => {
    const [activeTab, setActiveTab] = useState<string>('articles');
    const [articles, setArticles] = useState<Article[]>([]);
    const [quizzes, setQuizzes] = useState<Quiz[]>([]);
    const [interactiveMaterials, setInteractiveMaterials] = useState<InteractiveMaterial[]>([]);
    const [kidsContent, setKidsContent] = useState<KidsContent[]>([]);

    useEffect(() => {
        loadMockData();
    }, []);

    const loadMockData = () => {
        setArticles(mockArticles);
        setQuizzes(mockQuizzes);
        setInteractiveMaterials(mockInteractiveMaterials);
        setKidsContent(mockKidsContent);
    };

    const renderContent = () => {
        switch (activeTab) {
            case 'phenomena':
                return (
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        className="weather-phenomena"
                    >
                        {weatherPhenomena.map(phenomenon => (
                            <PhenomenonCard key={phenomenon.id} phenomenon={phenomenon} />
                        ))}
                    </motion.div>
                );
            case 'articles':
                return (
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        className="education-articles"
                    >
                        {articles.map(article => (
                            <ArticleCard key={article.id} article={article} />
                        ))}
                    </motion.div>
                );
            case 'interactive':
                return (
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        className="interactive-materials"
                    >
                        {interactiveMaterials.map(material => (
                            <InteractiveMaterialCard key={material.id} material={material} />
                        ))}
                    </motion.div>
                );
            case 'quizzes':
                return (
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        className="education-quizzes"
                    >
                        {quizzes.map(quiz => (
                            <QuizCard key={quiz.id} quiz={quiz} />
                        ))}
                    </motion.div>
                );
            case 'kids':
                return (
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        className="kids-content"
                    >
                        {kidsContent.map(content => (
                            <KidsContentCard key={content.id} content={content} />
                        ))}
                    </motion.div>
                );
            case 'facts':
                return (
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        className="interesting-facts"
                    >
                        {mockFacts.map(fact => (
                            <FactCard key={fact.id} fact={fact} />
                        ))}
                    </motion.div>
                );
            case 'climate':
                return (
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        className="climate-zones"
                    >
                        {mockClimateZones.map(zone => (
                            <ClimateZoneCard key={zone.id} zone={zone} />
                        ))}
                    </motion.div>
                );
            default:
                return (
                    <motion.div
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        className="coming-soon"
                    >
                        <h3>–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h3>
                        <p>–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç!</p>
                    </motion.div>
                );
        }
    };

    return (
        <div className="weather-education">
            <nav className="education-tabs">
                {tabs.map(tab => (
                    <motion.button
                        key={tab.id}
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                        className={`tab-button ${activeTab === tab.id ? 'active' : ''}`}
                        onClick={() => setActiveTab(tab.id)}
                    >
                        <span className="tab-icon">{tab.icon}</span>
                        {tab.label}
                    </motion.button>
                ))}
            </nav>

            <AnimatePresence mode="wait">
                {renderContent()}
            </AnimatePresence>

            <motion.div 
                className="education-footer"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.5 }}
            >
                <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="scroll-top-button"
                    onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
                >
                    ‚Üë –ù–∞–≤–µ—Ä—Ö
                </motion.button>
            </motion.div>
        </div>
    );
};

interface ArticleCardProps {
    article: Article;
}

const ArticleCard: React.FC<ArticleCardProps> = ({ article }) => {
    return (
        <motion.div
            className="article-card interactive-element"
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
        >
            {article.imageUrl && (
                <picture>
                    <img 
                        src={article.imageUrl} 
                        alt={article.title} 
                        className="article-image"
                        loading="lazy"
                        onError={(e) => {
                            const target = e.target as HTMLImageElement;
                            target.style.display = 'none';
                        }}
                    />
                </picture>
            )}
            <div className="article-content">
                <h3>{article.title}</h3>
                <div className="article-meta">
                    <span className="article-category">{article.category}</span>
                    <span className="article-difficulty">{article.difficulty}</span>
                </div>
                <p>{article.content.substring(0, 150)}...</p>
                <div className="article-tags">
                    {article.tags.map(tag => (
                        <span key={tag} className="tag">#{tag}</span>
                    ))}
                </div>
            </div>
        </motion.div>
    );
};

interface PhenomenonCardProps {
    phenomenon: WeatherPhenomenon;
}

const PhenomenonCard: React.FC<PhenomenonCardProps> = ({ phenomenon }) => {
    return (
        <motion.div
            className="phenomenon-card interactive-element"
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
        >
            {phenomenon.imageUrl && (
                <img src={phenomenon.imageUrl} alt={phenomenon.name} className="phenomenon-image" />
            )}
            <div className="phenomenon-content">
                <h3>{phenomenon.name}</h3>
                                <p className="phenomenon-description">{phenomenon.description}</p>
                <div className="phenomenon-details">
                    <h4>–ü—Ä–∏—á–∏–Ω—ã:</h4>
                    <ul>
                        {phenomenon.causes.map((cause, index) => (
                            <li key={index}>{cause}</li>
                        ))}
                    </ul>
                    <h4>–≠—Ñ—Ñ–µ–∫—Ç—ã:</h4>
                    <ul>
                        {phenomenon.effects.map((effect, index) => (
                            <li key={index}>{effect}</li>
                                    ))}
                                </ul>
                            </div>
            </div>
        </motion.div>
    );
};

interface InteractiveMaterialCardProps {
    material: InteractiveMaterial;
}

const InteractiveMaterialCard: React.FC<InteractiveMaterialCardProps> = ({ material }) => {
    return (
        <motion.div
            className="interactive-material-card interactive-element"
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
        >
            <div className="material-content">
                <h3>{material.title}</h3>
                <span className="material-type">{material.type}</span>
                <p>{material.content}</p>
                <div className="material-instructions">
                    <h4>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h4>
                    <ol>
                        {material.instructions.map((instruction, index) => (
                            <li key={index}>{instruction}</li>
                        ))}
                    </ol>
                </div>
                {material.requirements && (
                    <div className="material-requirements">
                        <h4>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</h4>
                        <ul>
                            {material.requirements.map((req, index) => (
                                <li key={index}>{req}</li>
                            ))}
                        </ul>
                    </div>
                )}
                <span className="age-group">–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞: {material.ageGroup}</span>
            </div>
        </motion.div>
    );
};

interface QuizCardProps {
    quiz: Quiz;
}

const QuizCard: React.FC<QuizCardProps> = ({ quiz }) => {
    const [state, setState] = useState<QuizState>({
        isActive: false,
        currentQuestion: 0,
        selectedAnswer: null,
        showExplanation: false,
        score: 0,
        timeLeft: quiz.timeLimit || 0,
        isFinished: false
    });

    const [timer, setTimer] = useState<NodeJS.Timeout | null>(null);

    useEffect(() => {
        if (state.isActive && !state.isFinished && quiz.timeLimit) {
            const interval = setInterval(() => {
                setState(prev => {
                    if (prev.timeLeft <= 0) {
                        clearInterval(interval);
                        return { ...prev, isFinished: true };
                    }
                    return { ...prev, timeLeft: prev.timeLeft - 1 };
                });
            }, 1000);
            setTimer(interval);
        }
        return () => {
            if (timer) clearInterval(timer);
        };
    }, [state.isActive, quiz.timeLimit]);

    const startQuiz = () => {
        setState({
            isActive: true,
            currentQuestion: 0,
            selectedAnswer: null,
            showExplanation: false,
            score: 0,
            timeLeft: quiz.timeLimit || 0,
            isFinished: false
        });
    };

    const exitQuiz = () => {
        if (timer) clearInterval(timer);
        setState({
            isActive: false,
            currentQuestion: 0,
            selectedAnswer: null,
            showExplanation: false,
            score: 0,
            timeLeft: quiz.timeLimit || 0,
            isFinished: false
        });
    };

    const handleAnswerSelect = (answerIndex: number) => {
        if (state.showExplanation) return;
        setState(prev => ({ ...prev, selectedAnswer: answerIndex }));
    };

    const checkAnswer = () => {
        const currentQ = quiz.questions[state.currentQuestion];
        if (state.selectedAnswer === currentQ.correctAnswer) {
            setState(prev => ({ ...prev, score: prev.score + 1 }));
        }
        setState(prev => ({ ...prev, showExplanation: true }));
    };

    const nextQuestion = () => {
        if (state.currentQuestion === quiz.questions.length - 1) {
            setState(prev => ({ ...prev, isFinished: true }));
            if (timer) clearInterval(timer);
        } else {
            setState(prev => ({
                ...prev,
                currentQuestion: prev.currentQuestion + 1,
                selectedAnswer: null,
                showExplanation: false
            }));
        }
    };

    const restartQuiz = () => {
        startQuiz();
    };

    const formatTime = (seconds: number) => {
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = seconds % 60;
        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
    };

    if (!state.isActive) {
        return (
            <motion.div
                className="quiz-card interactive-element"
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
            >
                <div className="quiz-content">
                    <h3>{quiz.title}</h3>
                    <p>{quiz.description}</p>
                    <div className="quiz-meta">
                        <span className="quiz-difficulty">{quiz.difficulty}</span>
                        <span className="quiz-category">{quiz.category}</span>
                        {quiz.timeLimit && (
                            <span className="quiz-time">
                                {Math.floor(quiz.timeLimit / 60)} –º–∏–Ω
                            </span>
                        )}
                    </div>
                    <div className="quiz-preview">
                        <p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {quiz.questions.length}</p>
                        <button className="start-quiz-button" onClick={startQuiz}>
                            –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É
                        </button>
                    </div>
                            </div>
            </motion.div>
        );
    }

    if (state.isFinished) {
        const percentage = (state.score / quiz.questions.length) * 100;
        let feedback = '';
        if (percentage >= 80) {
            feedback = '–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç!';
        } else if (percentage >= 60) {
            feedback = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ù–æ –µ—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏.';
        } else {
            feedback = '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.';
        }

        return (
            <motion.div
                className="quiz-active"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
            >
                <div className="quiz-results">
                    <div className="quiz-score">{percentage}%</div>
                    <p className="quiz-feedback">{feedback}</p>
                    <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {state.score} –∏–∑ {quiz.questions.length}</p>
                    <div className="quiz-final-buttons">
                        <button className="quiz-button quiz-restart" onClick={restartQuiz}>
                            –ü—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑
                        </button>
                        <button className="quiz-button quiz-exit" onClick={exitQuiz}>
                            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É
                        </button>
                    </div>
                </div>
            </motion.div>
        );
    }

    const currentQuestion = quiz.questions[state.currentQuestion];

    return (
        <motion.div
            className="quiz-active"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
        >
            <div className="quiz-header">
                <h3>{quiz.title}</h3>
                <button className="quiz-button quiz-exit" onClick={exitQuiz}>
                    –í—ã–π—Ç–∏
                </button>
            </div>
            <div className="quiz-question">
                <h3>{currentQuestion.question}</h3>
                <div className="quiz-options">
                    {currentQuestion.options.map((option, index) => (
                        <motion.button
                            key={index}
                            className={`quiz-option ${state.selectedAnswer === index ? 'selected' : ''} ${
                                state.showExplanation
                                    ? index === currentQuestion.correctAnswer
                                        ? 'correct'
                                        : state.selectedAnswer === index
                                        ? 'incorrect'
                                        : ''
                                    : ''
                            }`}
                            onClick={() => handleAnswerSelect(index)}
                            whileHover={{ scale: 1.02 }}
                            whileTap={{ scale: 0.98 }}
                            disabled={state.showExplanation}
                        >
                            {option}
                        </motion.button>
                    ))}
                </div>
                {state.showExplanation && (
                    <motion.div
                        className="quiz-explanation"
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                    >
                        {currentQuestion.explanation}
                    </motion.div>
                )}
            </div>

            <div className="quiz-progress">
                <span>–í–æ–ø—Ä–æ—Å {state.currentQuestion + 1} –∏–∑ {quiz.questions.length}</span>
                <div className="quiz-progress-bar">
                    <div
                        className="quiz-progress-fill"
                        style={{
                            width: `${((state.currentQuestion + 1) / quiz.questions.length) * 100}%`
                        }}
                    />
                </div>
                {quiz.timeLimit && (
                    <span className="quiz-timer">{formatTime(state.timeLeft)}</span>
                )}
            </div>

            <div className="quiz-controls">
                {!state.showExplanation ? (
                    <button
                        className="quiz-button"
                        onClick={checkAnswer}
                        disabled={state.selectedAnswer === null}
                    >
                        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç
                    </button>
                ) : (
                    <button className="quiz-button" onClick={nextQuestion}>
                        {state.currentQuestion === quiz.questions.length - 1
                            ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å'
                            : '–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å'}
                    </button>
                )}
            </div>
        </motion.div>
    );
};

interface KidsContentCardProps {
    content: KidsContent;
}

const KidsContentCard: React.FC<KidsContentCardProps> = ({ content }) => {
    return (
        <motion.div
            className="kids-content-card interactive-element"
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
        >
            <div className="kids-content-image-container">
                {content.imageUrl && (
                    <picture>
                        <img 
                            src={content.imageUrl} 
                            alt={content.title} 
                            className="kids-content-image"
                            loading="lazy"
                            onError={(e) => {
                                const target = e.target as HTMLImageElement;
                                target.style.display = 'none';
                            }}
                        />
                    </picture>
                )}
            </div>
            <div className="kids-content-info">
                <h3>{content.title}</h3>
                <p className="kids-description">{content.description}</p>
                <div className="kids-content-meta">
                    <span className="age-range">
                        {content.ageRange[0]}-{content.ageRange[1]} –ª–µ—Ç
                    </span>
                    <span className="content-type">{content.type}</span>
                    <span className="content-difficulty">{content.difficulty}</span>
                </div>
                <p className="kids-content-text">{content.content}</p>
                {content.materials && (
                    <div className="materials-needed">
                        <h4>–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:</h4>
                        <ul>
                            {content.materials.map((material, index) => (
                                <li key={index}>{material}</li>
                            ))}
                        </ul>
                    </div>
                )}
                {content.parentGuidance && (
                    <div className="parent-guidance">
                        <h4>–î–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π:</h4>
                        <p>{content.parentGuidance}</p>
                    </div>
                )}
            </div>
        </motion.div>
    );
};

interface FactCardProps {
    fact: {
        id: string;
        title: string;
        fact: string;
        icon: string;
    };
}

const FactCard: React.FC<FactCardProps> = ({ fact }) => {
    return (
        <motion.div
            className="fact-card interactive-element"
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
        >
            <span className="fact-icon">{fact.icon}</span>
            <h3>{fact.title}</h3>
            <p>{fact.fact}</p>
        </motion.div>
    );
};

interface ClimateZoneCardProps {
    zone: {
        id: string;
        name: string;
        description: string;
        characteristics: string[];
        flora: string[];
        fauna: string[];
        icon: string;
    };
}

const ClimateZoneCard: React.FC<ClimateZoneCardProps> = ({ zone }) => {
    return (
        <motion.div
            className="climate-zone-card interactive-element"
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
        >
            <div className="zone-header">
                <span className="zone-icon">{zone.icon}</span>
                <h3>{zone.name}</h3>
            </div>
            <p className="zone-description">{zone.description}</p>
            <div className="zone-details">
                <div className="characteristics">
                    <h4>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</h4>
                    <ul>
                        {zone.characteristics.map((char, index) => (
                            <li key={index}>{char}</li>
                        ))}
                    </ul>
                </div>
                <div className="flora-fauna">
                    <div className="flora">
                        <h4>–§–ª–æ—Ä–∞:</h4>
                        <ul>
                            {zone.flora.map((plant, index) => (
                                <li key={index}>{plant}</li>
                            ))}
                        </ul>
                    </div>
                    <div className="fauna">
                        <h4>–§–∞—É–Ω–∞:</h4>
                        <ul>
                            {zone.fauna.map((animal, index) => (
                                <li key={index}>{animal}</li>
                            ))}
                        </ul>
                    </div>
            </div>
        </div>
        </motion.div>
    );
};

export default WeatherEducation; 